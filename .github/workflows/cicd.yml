name: check

on: push

jobs:
  lint:
    name: Run ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Install dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm install

      - name: Run linter
        run: npm run lint

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-

      - name: Install dependencies
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm install

      - name: Build project
        run: npm run build
  
  docker-image:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
      contents: read
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: 🧱 Build and Push Docker Image
        run: |
          docker buildx build \
            -f Dockerfile \
            --platform linux/amd64 \
            -t ghcr.io/vladmatviyuk/5frm_back:latest \
            --push \
            .

      - name: 📝 Success
        run: |
          echo "✅ Docker image published: ghcr.io/vladmatviyuk/5frm_back:latest"
